#!/bin/sh

if [ "$#" -ne "1" ]
then
	echo "USAGE: $0 <infile>"
	exit 1
fi

infile="$1"
if [ ! -e "$infile" ]
then
	echo "$infile: Does not exist!" >&2
	exit 2
fi

filter() {
	local infix="$1"
	local title="$2"
	local xaxis="$3"
	local yaxis="$4"
	local series="$5"
	local columns="$6"
	local stats="$7"
	local outfile="`echo "$infile" | sed "s/\./-$infix&/"`"
	if [ -n "$series" ]
	then
		xaxis=",$series,"
	fi
	echo "$outfile"
	echo "$title,$yaxis" >"$outfile"
	echo "$xaxis$series" >>"$outfile"
	echo "$stats" | cut -d, -f"1,$columns" >>"$outfile"
}

multiseries() {
	echo "$*" | sed 's/,\|$/&,/g'
}

stats="`tail -n+3 "$infile"`"
numcols="`echo "$stats" | head -n1 | tr -dc , | wc -c`"
if [ "$numcols" -eq "7" ]
then
	# No standard deviations
	slabels="echo"
	times="2-4"
	memory="5"
	faults="6-"
elif [ "$numcols" -eq "14" ]
then
	# Has standard deviations
	slabels="multiseries"
	times="2-7"
	memory="8-9"
	faults="10-"
else
	echo "Unexpected number ($numcols) of commas per line!" >&2
	exit 3
fi

filter times "Time vs. libsets" "Number of libsets initialized" "Execution time (s)" "`"$slabels" user,system,real`" "$times" "$stats"
filter memory "Memory vs. libsets" "Number of libsets initialized" "Maximum resident set size (MB)" "`"$slabels" ""`" "$memory" "$stats"
filter faults "Page faults vs. libsets" "Number of libsets initialized" "Number of page faults" "`"$slabels" major,minor,total`" "$faults" "$stats"
