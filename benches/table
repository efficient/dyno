#!/bin/sh

if [ "$#" -lt "1" -o "$#" -gt "2" ]
then
	echo "USAGE: $0 <outfile> [deno]"
	exit 1
fi

outfile="$1"
if [ -e "$outfile" ]
then
	echo "$outfile: Already exists!" >&2
	exit 2
fi

deno="$2"
iters="50"
mydir="`dirname "$0"`"
if [ -z "$deno" ]
then
	deno="$mydir/../deno/target/release/deno"
	iters="5"
fi
if [ ! -e "$deno" ]
then
	echo "$deno: Not there!" >&2
	exit 3
fi

time="sample"
if which multitime >/dev/null
then
	time="multisample"
fi

sample() {
	local stats="`LIBGOTCHA_NUMGROUPS="$libsets" time -f"%U,%S,%e,%M,%F,%R" "$@" 2>&1`"
	local mbs="$((`echo "$stats" | cut -d, -f4`/1024))"
	local pfs="`echo "$stats" | cut -d, -f5-`,$((`echo "$stats" | cut -d, -f5- | tr , +`))"
	printf "%s,%s,%s\n" "`echo "$stats" | cut -d, -f-3`" "$mbs" "$pfs"
}

multisample() {
	local stats="`LIBGOTCHA_NUMGROUPS="$libsets" multitime -l -n"$iters" -s0 "$@" 2>&1 | tail -n+4 | tr -s " " | tr " " , | cut -d, -f-3`"
	printf "%s," "`echo "$stats" | grep ^user, | cut -d, -f2-`"
	printf "%s," "`echo "$stats" | grep ^sys, | cut -d, -f2-`"
	printf "%s," "`echo "$stats" | grep ^real, | cut -d, -f2-`"
	printf "%s," "$((`echo "$stats" | grep ^maxrss, | cut -d, -f2`/1024))"
	printf "%s," "$((`echo "$stats" | grep ^maxrss, | cut -d, -f3`/1024))"
	printf "%s," "`echo "$stats" | grep ^majflt, | cut -d, -f2-`"
	printf "%s," "`echo "$stats" | grep ^minflt, | cut -d, -f2-`"
	printf "%s," "$((`echo "$stats" | grep ^...flt, | cut -d, -f2 | paste -sd+`))"
	echo 0
}

# Warmup
"$deno" eval "" >/dev/null
"$mydir/run" "$deno" eval "" >/dev/null

git log --oneline --abbrev-commit --no-decorate -1 | tee "$outfile"
ls -lh "$deno" | tee -a "$outfile"
printf "0," | tee -a "$outfile"
"$time" "$deno" eval "" | tee -a "$outfile"
for libsets in `seq 1 15`
do
	printf "%s," "$libsets" | tee -a "$outfile"
	"$time" "$mydir/run" "$deno" eval "" | tee -a "$outfile"
done
